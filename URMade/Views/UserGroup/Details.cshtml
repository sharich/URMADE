@model UserGroupViewModel

@{
    ViewBag.Title = "Details";
}

<h2>
    <div class="pull-right">
        <a href="@Url.Action("Edit", new { id = Model.Id })" class="btn btn-primary">Edit</a>
        <a href="@Url.Action("Delete", new { id = Model.Id })" 
           class="btn btn-danger"
           @Html.TriggerModal("delete-user-group")>Delete</a>

        @Html.BootstrapModal(
            title: "Delete User Group",
            body: @<p>Are you sure you want to permanantly delete this User Group?</p>,
            id: "delete-user-group",
            confirmLabel: "Delete User Group",
            actionUrl: Url.Action("Delete", new { id = Model.Id }))

    </div>
    User Group Details
</h2>

<dl class="dl-horizontal">
    <dt>Name</dt>
    <dd>@Model.Name</dd>
    <dt>Permission Groups</dt>
    <dd>@String.Join(", ", Model.PermissionGroups)</dd>
</dl>

<h4>Group Members</h4>
@if (Model.Users != null && Model.Users.Count() > 0)
{
    <table class="table table-striped table-elastic">
        <thead>
            <tr>
                <th>Name</th>
                @if (Settings.UsernameSameAsEmail)
                {
                    <th>Username</th>
                }
                else
                {
                    <th>Username</th>
                    <th>Email</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach(UserViewModel user in Model.Users)
            {
            <tr data-clickable-row="@Url.Action("Details", "User", new { id = user.Id })">
                <td>@user.Name</td>
                <td>@user.UserName</td>
                @if (!Settings.UsernameSameAsEmail)
                {
                <td>@user.Email</td>
                }
            </tr>
            }
        </tbody>
    </table>

}
else
{
    <div class="well">
        There are no users in this group.
    </div>
}