@model UserViewModel

@{

}

<!DOCTYPE html>


<h2>Edit</h2>

<div class="form-horizontal">
    @if (Settings.AdminsCanSetPassword || Model.IsLoggedInUser)
    {
        using (Html.BeginForm("UpdatePassword", "User", new { id = Model.Id }, FormMethod.Post))
        {
        @Html.HiddenFor(m => m.UpdatePassword.Id)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <h4>Update Password</h4>
            </div>
            @Html.LabelFor(m => m.UpdatePassword.NewPassword, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.UpdatePassword.NewPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.UpdatePassword.NewPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.UpdatePassword.ConfirmNewPassword, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.UpdatePassword.ConfirmNewPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.UpdatePassword.ConfirmNewPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button class="btn btn-primary">Save</button>
            </div>
        </div>
        }
    }

    <div>
        @Html.ActionLink("Back", "Index")
    </div>
</div>